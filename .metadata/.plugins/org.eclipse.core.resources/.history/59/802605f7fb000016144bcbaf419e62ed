package data_structure;

import java.util.Stack;

import javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction;

public class SlidingWindow {
	
	public void maxInWindow(int k, int[] v, int len)
	{
		Stack<Integer> s=new Stack<Integer>();
		for(int i=0; i<k;i++)
		{
			if(s.isEmpty())
			{
				s.push(v[i]);
			}
			else
			{
				int max=s.peek();
				if(max<v[i])
				{
					int no=s.pop();
					s.push(v[i]);
				}
			}
		}
		for(int i=k;i<=len;i++)
		{
			System.out.println(s.peek());
			
			int max=s.peek();
			if(max<v[i])
			{
				int no=s.pop();
				s.push(v[i]);
			}
		}
		
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		int[] v = {2,3,4,2,6,2,7,7};
		SlidingWindow s=new SlidingWindow();
		s.maxInWindow(3, v, 8);
		
	}
	
	

}

